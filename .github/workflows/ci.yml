jobs:
  flake:
    name: Flake self-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check Nix flake inputs
      uses: DeterminateSystems/flake-checker-action@v5
      with:
        fail-mode: true

  rust-pipeline:
    name: Rust Pipeline
    environment: "Github Actions"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        host:
        # - macos-aarch64
        - linux
        include:
        - host: linux
          # runs-on: ubuntu-latest
          runs-on: buildjet-8vcpu-ubuntu-2204
          timeout: 60
        # - host: macos-aarch64
        #   runs-on: macos-14
        #   timeout: 60
    timeout-minutes: ${{ matrix.timeout }}
    steps:
    - uses: actions/checkout@v4
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v4
    - name: Setup Cachix
      uses: cachix/cachix-action@v12
      with:
        name: justinmoon
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    # - name: Cargo Cache
    #   uses: actions/cache@v3
    #   with:
    #     key: ${{ runner.os }}-${{ matrix.host }}-${{ hashFiles('Cargo.lock') }}
    #     path: ~/.cargo

    - name: Print nix version
      run: 'nix --version'
    - name: Fetch subs
      run: 'nix config show | grep substituters'
    - name: Run nix develop
      run: 'nix develop'
        
    - name: Test dev shell
      run: 'nix develop'

    # Use the optimized flakebox pipeline
    - name: Build Dependencies
      run: 'nix build .#workspaceDeps -L'
      
    - name: Build Workspace
      run: 'nix build .#default -L'
      
    - name: Run Lints
      run: 'nix develop --ignore-environment .#lint --command ./scripts/pre-commit.sh'
      
    - name: Run Rust Unittests
      run: 'nix build .#rustUnitTests -L'

    - name: Run E2E Tests
      run: 'nix develop -c just ui-tests'

  # android-pipeline:
  #   name: Android Pipeline
  #   runs-on: ${{ matrix.runs-on }}
  #   strategy:
  #     matrix:
  #       host:
  #       - macos-aarch64
  #       # - linux
  #       include:
  #       # - host: linux
  #       #   runs-on: ubuntu-latest
  #       #   timeout: 60
  #       - host: macos-aarch64
  #         runs-on: macos-14
  #         timeout: 60
  #   timeout-minutes: ${{ matrix.timeout }}
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Install Nix
  #     uses: DeterminateSystems/nix-installer-action@v4
  #   - name: Setup Cachix
  #     uses: cachix/cachix-action@v12
  #     with:
  #       name: bar
  #       authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #   # TODO: is that "cross-android" prefix on the key doing the right thing?
  #   - name: Cargo Cache
  #     uses: actions/cache@v3
  #     with:
  #       key: cross-android-${{ runner.os }}-${{ matrix.host }}-${{ hashFiles('Cargo.lock') }}
  #       path: ~/.cargo
  #   - name: Run E2E Tests
  #     run: 'nix develop -c just ui-tests'

name: CI
'on':
  merge_group:
    branches:
    - master
    - main
  pull_request:
    branches:
    - master
    - main
  push:
    branches:
    - master
    - main
    tags:
    - v*
  workflow_dispatch: {}
